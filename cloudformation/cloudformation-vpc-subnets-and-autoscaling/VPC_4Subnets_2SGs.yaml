AWSTemplateFormatVersion: 2010-09-09
Description: This template deploys a VPC, with a pair of public and private subnets spread across two Availability Zones. And two Secourity Groups (HTTP&SSH, SSH).

# Parameter go here
Parameters:
  EnvironmentName:
    Description: Will be used as name for all Resources
    Type: String
  VpcCIDR: 
    Description: IP range (CIDR notation) for the VPC
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Description: IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.10.0/24
  PublicSubnet2CIDR:
    Description: IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.0.11.0/24
  PrivateSubnet1CIDR:
    Description: IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.20.0/24
  PrivateSubnet2CIDR:
    Description: IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.0.21.0/24

# Metadata go here
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Environment Configuration"
        Parameters: 
          - EnvironmentName
      -
        Label: 
          default: "Network Configuration"
        Parameters: 
          - VpcCIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
    ParameterLabels: 
      EnvironmentName:
        default: "Project Name"
      VpcCIDR: 
        default: "VPC CIDR"
      PublicSubnet1CIDR: 
        default: "Public Subnet 1 CIDR"
      PublicSubnet2CIDR: 
        default: "Public Subnet 2 CIDR"
      PrivateSubnet1CIDR: 
        default: "Private Subnet 1 CIDR"
      PrivateSubnet2CIDR: 
        default: "Private Subnet 2 CIDR"

# Resources go here
Resources:
  # VPC Creation
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub vpc-${EnvironmentName}
      - Key: Project
        Value: !Ref EnvironmentName
  # - Internet Gateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: 
      Tags:
      - Key: Name
        Value: !Sub igw-${EnvironmentName}
      - Key: Project
        Value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref MyVPC

  # Subnets
  # - Public Subnets
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub 'sub-${EnvironmentName}-public-1a'
      - Key: Project
        Value: !Ref EnvironmentName
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub 'sub-${EnvironmentName}-public-1b'
      - Key: Project
        Value: !Ref EnvironmentName
  # - Private Subnets
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: !Sub 'sub-${EnvironmentName}-private-1a'
      - Key: Project
        Value: !Ref EnvironmentName
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: !Sub 'sub-${EnvironmentName}-private-1b'
      - Key: Project
        Value: !Ref EnvironmentName

  # Route Tables
  # - Public Route
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref MyVPC
      Tags: 
      - Key: Name 
        Value: !Sub rtb-public-${EnvironmentName}
      - Key: Project
        Value: !Ref EnvironmentName
  DefaultPublicRoute: 
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  
  # Security Groups
  # - SG HTTP & SSH
  SecurityGroupSSHandHTTP:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub http-ssh-${EnvironmentName}-sg
      GroupDescription: "SSH & HTTP traffic in, all traffic out."
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: !Sub 'secG-SSHandHTTP-${EnvironmentName}'
  # - SG SSH
  SecurityGroupSSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ssh-${EnvironmentName}-sg
      GroupDescription: "SSH traffic in, all traffic out."
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: !Sub 'secG-SSH-${EnvironmentName}'

# Output goes here        
Outputs:
  VPCid: 
    Description: Reference to the VPC
    Value: !Ref MyVPC
  VPCcidr:
    Description: The primaty CIDR block of the VPC
    Value: !GetAtt MyVPC.CidrBlock
  PublicSubnets:
    Description: List of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
  PrivateSubnets:
    Description: List of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
  PublicSubnet1:
    Description: Reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
  PublicSubnet2: 
    Description: Reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
  PrivateSubnet1:
    Description: Reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
  PrivateSubnet2: 
    Description: Reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
  SecurityGroupSSHandHTTP:
    Description: Security group with HTTP & SSH
    Value: !Ref SecurityGroupSSHandHTTP
  SecurityGroupSSH:
    Description: Security group with SSH
    Value: !Ref SecurityGroupSSH